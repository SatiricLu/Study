package com.satiric.doit.Controllers;
import com.satiric.doit.Tables.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.sql.Date;

@Controller // This means that this class is a Controller
@RequestMapping(path="/") // This means URL's start with /demo (after Application path)
public class AuthController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private com.satiric.doit.Tables.userRepository userRepository;

    @PostMapping(path="/addUser") // Map ONLY POST Requests
    public @ResponseBody
    String addNewUser (@RequestParam String login
            , @RequestParam String pass,  @RequestParam String first_name
            , @RequestParam String second_name) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        //@RequestParam String date_create,

        User n = new User();
        n.setLogin(login);
        n.setPass(pass);
        n.setDate_create(new Date(System.currentTimeMillis()));
        n.setFirst_name(first_name);
        n.setSecond_name(second_name);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/allUsers")
    public @ResponseBody Iterable<User> getAllUsers() {
        // This returns a JSON or XML with the users
        return userRepository.findAll();
    }
}
